<?php

/**
 * Cloudrexx
 *
 * @link      http://www.cloudrexx.com
 * @copyright Cloudrexx AG 2007-2015
 *
 * According to our dual licensing model, this program can be used either
 * under the terms of the GNU Affero General Public License, version 3,
 * or under a proprietary license.
 *
 * The texts of the GNU Affero General Public License with an additional
 * permission and of our proprietary license can be found at and
 * in the LICENSE file you have received along with this program.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * "Cloudrexx" is a registered trademark of Cloudrexx AG.
 * The licensing of the program under the AGPLv3 does not imply a
 * trademark license. Therefore any rights, title and interest in
 * our trademarks remain entirely with us.
 */

/**
 * Update the component table and fill it with the new values
 * @return bool true on success false otherwise
 */
function _updateComponent() {
    // get all Components
    $arrComponents = getComponents();
    try {
        // Drop existing values
        Cx\Lib\UpdateUtil::sql('TRUNCATE TABLE `' . DBPREFIX . 'component`');

        foreach ($arrComponents as $component) {
            Cx\Lib\UpdateUtil::sql("INSERT INTO `".DBPREFIX."component` (`id`,
                                        `name`, `type`)
                                    VALUES (" . $component['id']. ", " . $component['name'] . ", " . $component['type'] . ")");
        }
    } catch (\Cx\Lib\UpdateException $e) {
        return \Cx\Lib\UpdateUtil::DefaultActionHandler($e);
    }

    return true;
}

/**
 * Returns an array with each component.
 *
 * IMPORTANT the component list is generated by the pkg-manager
 * array(
 *      $key    =>  array(
 *                      id => component id,
 *                      name => component name,
 *                      type => component type,
 *                  )
 * @return array All components
 */
function getComponents()
{
    $arrComponents = array();

    return $arrComponents;
}
